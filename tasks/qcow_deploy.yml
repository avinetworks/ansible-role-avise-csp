---
- name: Avi SE | CSP | Image deploy | See if the qcow image already exists
  uri:
    url: "https://{{ inventory_hostname }}/api/operational/repository/image/{{ se_csp_qcow_image_name }}/_operations/get_image"
    method: POST
    user: "{{ se_csp_user }}"
    password: "{{ se_csp_password }}"
    force_basic_auth: yes
    headers:
      Accept: '*/*'
    validate_certs: false
    return_content: true
  failed_when: false
  register: se_image_exists
  delegate_to: localhost

- block:
    - set_fact:
        se_image_exists_json: "{{ se_image_exists.content|from_json }}"
    - debug: msg="Image {{ se_image_exists_json.output.name }} already exists."
  when: se_image_exists.status == 200

- block:
    - name: Avi SE | CSP | Image deploy | Verify qcow exists locally
      stat:
        path: "{{ se_csp_qcow_image_file }}"
      delegate_to: localhost
      register: se_qcow_status
      #failed_when: not se_qcow_status.stat.exists
    - block:
        - name:  Avi SE | CSP | Image deploy | grnarate SE image if not exist on controller
          delegate_to: localhost
          avi_api_session:
            controller: "{{se_master_ctl_ip}}"
            username: "{{se_master_ctl_username}}"
            password: "{{se_master_ctl_password}}"
            api_version: "{{se_master_ctl_version}}"
            http_method: post
            path: 'fileservice/seova'
            timeout: 600
            data:
              file_format: qcow2

        - name: Avi SE | CSP | Image deploy | Download SE image from Controller
          delegate_to: localhost
          avi_api_fileservice:
            controller: "{{se_master_ctl_ip}}"
            username: "{{se_master_ctl_username}}"
            password: "{{se_master_ctl_password}}"
            http_method: get
            path: seova
            file_path: "{{ se_csp_qcow_image_file }}"
            api_version: "{{se_master_ctl_version}}"
            params:
              file_format: qcow2
      when: not se_qcow_status.stat.exists

    - name: Avi SE | CSP | Image deploy | SCP qcow to csp device
      shell: sshpass -p "{{ se_csp_password }}" scp -o StrictHostKeyChecking=no {{ se_csp_qcow_image_file }} {{ se_csp_user }}@{{ inventory_hostname }}:/osp/repository
      register: command_result
      failed_when: false
      delegate_to: localhost

    - name: Avi SE | CSP | Image deploy | Verify the qcow image copied successfully
      uri:
        url: "https://{{ inventory_hostname }}/api/operational/repository/image/{{ se_csp_qcow_image_name }}/_operations/get_image"
        method: POST
        user: "{{ se_csp_user }}"
        password: "{{ se_csp_password }}"
        force_basic_auth: yes
        headers:
          Accept: '*/*'
        validate_certs: false
        return_content: true
      register: con_image_verify
      delegate_to: localhost
    - name: Avi SE | CSP | Image deploy | Fail if SCP verification faild
      fail:
        msg: "SCP to CSP host failed {{ command_result }}"
      when: con_image_verify.status != 200
  when: se_image_exists.status != 200
